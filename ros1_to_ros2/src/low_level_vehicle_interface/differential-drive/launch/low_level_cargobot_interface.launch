<launch>
    <arg name="enable_wheel_odom" default="true"/>
    <arg name="enable_robot" default="true"/>
    <!--***************** Wheels odometry *****************-->
    <!-- <node if="$(arg enable_wheel_odom)" pkg="differential_drive" type="cargobot_diff_tf.py" name="cargobot_diff_tf">
        <remap from="odom" to="wheel_encoder/odometry"/>
        <rosparam param="left_ticks_meter">1051</rosparam>
        <rosparam param="right_ticks_meter">1051</rosparam>
        <rosparam param="base_width">0.62</rosparam>
        <rosparam param="encoder_min">-999999999</rosparam>
        <rosparam param="encoder_max">999999999</rosparam>
        <rosparam param="base_frame_id">"base_link"</rosparam>
        <rosparam param="odom_frame_id">"odom"</rosparam>
    </node> -->
    <!--*******************************************************************-->

    <!--***************** VESC Drivers *****************-->

    <include file="$(find vesc_driver)/launch/vesc_cargobot_driver_node.launch"/>

    <!--************** VESC message converter **************-->
    <node pkg="vesc_converter" type="vesc_cargobot_converter" name="vesc_cargobot_converter"/>

    <!-- ******************TWIST TO VESC MESSAGE********-->
    <node pkg="differential_drive" type="twist_to_cargobot_motors.py" name="twist_to_cargobot_motors" output="screen">
    <rosparam param="rate">20.0</rosparam>
    <rosparam param="base_width">0.62</rosparam>
    <rosparam param="timeout_ticks">10</rosparam>
    </node>


</launch>